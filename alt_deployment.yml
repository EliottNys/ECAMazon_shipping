apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shipping-web
  template:
    metadata:
      labels:
        app: shipping-web
    spec:
      containers:
      - name: web
        image: nislhin/ecamazon_shipping:latest
        ports:
        - containerPort: 5000
        env:
        - name: MONGO_URI
          value: "mongodb://shipping-mongo:27017/shipping_db"

---

apiVersion: v1
kind: Service
metadata:
  name: shipping-web-service
spec:
  selector:
    app: shipping-web
  ports:
  - protocol: TCP
    port: 30010  # external port assigned to us, do not modify
    targetPort: 5000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-mongo-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shipping-mongo
  template:
    metadata:
      labels:
        app: shipping-mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db

---

apiVersion: v1
kind: Service
metadata:
  name: shipping-mongo-service
spec:
  selector:
    app: shipping-mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: shipping-mongo-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/shipping-data"  # Adjust the path on the host machine

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shipping-mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: Service
metadata:
  name: shipping-mongo-headless
spec:
  selector:
    app: shipping-mongo
  clusterIP: None
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017