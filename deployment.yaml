apiVersion: v1
kind: Service
metadata:
  name: ecamazon-shipping
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 30010
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-flask-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: nislhin/ecamazon_shipping:latest
          ports:
            - containerPort: 30010
          env:
            - name: MONGO_URI
              value: "mongodb://mongo-service:27017/shipping_db"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 30011
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
  clusterIP: None
